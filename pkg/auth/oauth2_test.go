package auth

import (
	"testing"

	"github.com/google/go-cmp/cmp"
)

func TestHashVerifier(t *testing.T) {
	tests := []struct {
		name         string
		b            []byte
		wantVerifier []byte
	}{
		{
			name:         "Hello, World!",
			b:            []byte("Hello, World!"),
			wantVerifier: []uint8{0xdf, 0xfd, 0x60, 0x21, 0xbb, 0x2b, 0xd5, 0xb0, 0xaf, 0x67, 0x62, 0x90, 0x80, 0x9e, 0xc3, 0xa5, 0x31, 0x91, 0xdd, 0x81, 0xc7, 0xf7, 0x0a, 0x4b, 0x28, 0x68, 0x8a, 0x36, 0x21, 0x82, 0x98, 0x6f},
		},
		{
			name:         "oauth2 state size",
			b:            make([]byte, 1024),
			wantVerifier: []uint8{0x5f, 0x70, 0xbf, 0x18, 0xa0, 0x86, 0x00, 0x70, 0x16, 0xe9, 0x48, 0xb0, 0x4a, 0xed, 0x3b, 0x82, 0x10, 0x3a, 0x36, 0xbe, 0xa4, 0x17, 0x55, 0xb6, 0xcd, 0xdf, 0xaf, 0x10, 0xac, 0xe3, 0xc6, 0xef},
		},
	}
	for _, tt := range tests {
		tt := tt
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()

			gotVerifier := HashVerifier(tt.b)
			if diff := cmp.Diff(gotVerifier, tt.wantVerifier); diff != "" {
				t.Errorf("%s: (-got, +want)\n%s\n", tt.name, diff)
			}
		})
	}
}
